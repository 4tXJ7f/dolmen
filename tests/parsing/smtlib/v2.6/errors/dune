; File auto-generated by gentests.ml
; Auto-generated part begin

; Test for 001_identifier_index_1.smt2
(rule
  (target  001_identifier_index_1.output)
  (deps    001_identifier_index_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 001_identifier_index_1.expected 001_identifier_index_1.output)))

; Test for 001_identifier_index_2.smt2
(rule
  (target  001_identifier_index_2.output)
  (deps    001_identifier_index_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 001_identifier_index_2.expected 001_identifier_index_2.output)))

; Test for 002_qual_identifier_unclosed.smt2
(rule
  (target  002_qual_identifier_unclosed.output)
  (deps    002_qual_identifier_unclosed.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 002_qual_identifier_unclosed.expected 002_qual_identifier_unclosed.output)))

; Test for 003_qual_identifier_bad_sort_1.smt2
(rule
  (target  003_qual_identifier_bad_sort_1.output)
  (deps    003_qual_identifier_bad_sort_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 003_qual_identifier_bad_sort_1.expected 003_qual_identifier_bad_sort_1.output)))

; Test for 003_qual_identifier_bad_sort_2.smt2
(rule
  (target  003_qual_identifier_bad_sort_2.output)
  (deps    003_qual_identifier_bad_sort_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 003_qual_identifier_bad_sort_2.expected 003_qual_identifier_bad_sort_2.output)))

; Test for 004_qual_identifier_bad_identifier_1.smt2
(rule
  (target  004_qual_identifier_bad_identifier_1.output)
  (deps    004_qual_identifier_bad_identifier_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 004_qual_identifier_bad_identifier_1.expected 004_qual_identifier_bad_identifier_1.output)))

; Test for 005_attribute_name_1.smt2
(rule
  (target  005_attribute_name_1.output)
  (deps    005_attribute_name_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 005_attribute_name_1.expected 005_attribute_name_1.output)))

; Test for 005_attribute_name_2.smt2
(rule
  (target  005_attribute_name_2.output)
  (deps    005_attribute_name_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 005_attribute_name_2.expected 005_attribute_name_2.output)))

; Test for 005_attribute_name_3.smt2
(rule
  (target  005_attribute_name_3.output)
  (deps    005_attribute_name_3.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 005_attribute_name_3.expected 005_attribute_name_3.output)))

; Test for 006_attribute_bad_name.smt2
(rule
  (target  006_attribute_bad_name.output)
  (deps    006_attribute_bad_name.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 006_attribute_bad_name.expected 006_attribute_bad_name.output)))

; Test for 007_attribute_missing_term.smt2
(rule
  (target  007_attribute_missing_term.output)
  (deps    007_attribute_missing_term.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 007_attribute_missing_term.expected 007_attribute_missing_term.output)))

; Test for 008_exists_unclosed_1.smt2
(rule
  (target  008_exists_unclosed_1.output)
  (deps    008_exists_unclosed_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 008_exists_unclosed_1.expected 008_exists_unclosed_1.output)))

; Test for 008_exists_unclosed_2.smt2
(rule
  (target  008_exists_unclosed_2.output)
  (deps    008_exists_unclosed_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 008_exists_unclosed_2.expected 008_exists_unclosed_2.output)))

; Test for 009_exists_missing_body_1.smt2
(rule
  (target  009_exists_missing_body_1.output)
  (deps    009_exists_missing_body_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 009_exists_missing_body_1.expected 009_exists_missing_body_1.output)))

; Test for 009_exists_missing_body_2.smt2
(rule
  (target  009_exists_missing_body_2.output)
  (deps    009_exists_missing_body_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 009_exists_missing_body_2.expected 009_exists_missing_body_2.output)))

; Test for 010_exists_bad_var_1.smt2
(rule
  (target  010_exists_bad_var_1.output)
  (deps    010_exists_bad_var_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 010_exists_bad_var_1.expected 010_exists_bad_var_1.output)))

; Test for 010_exists_bad_var_2.smt2
(rule
  (target  010_exists_bad_var_2.output)
  (deps    010_exists_bad_var_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 010_exists_bad_var_2.expected 010_exists_bad_var_2.output)))

; Test for 011_exists_bad_var_list_1.smt2
(rule
  (target  011_exists_bad_var_list_1.output)
  (deps    011_exists_bad_var_list_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 011_exists_bad_var_list_1.expected 011_exists_bad_var_list_1.output)))

; Test for 011_exists_bad_var_list_2.smt2
(rule
  (target  011_exists_bad_var_list_2.output)
  (deps    011_exists_bad_var_list_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 011_exists_bad_var_list_2.expected 011_exists_bad_var_list_2.output)))

; Test for 012_forall_unclosed_1.smt2
(rule
  (target  012_forall_unclosed_1.output)
  (deps    012_forall_unclosed_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 012_forall_unclosed_1.expected 012_forall_unclosed_1.output)))

; Test for 012_forall_unclosed_2.smt2
(rule
  (target  012_forall_unclosed_2.output)
  (deps    012_forall_unclosed_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 012_forall_unclosed_2.expected 012_forall_unclosed_2.output)))

; Test for 013_forall_missing_body_1.smt2
(rule
  (target  013_forall_missing_body_1.output)
  (deps    013_forall_missing_body_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff 013_forall_missing_body_1.expected 013_forall_missing_body_1.output)))

; Test for pattern_1.smt2
(rule
  (target  pattern_1.output)
  (deps    pattern_1.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff pattern_1.expected pattern_1.output)))

; Test for pattern_2.smt2
(rule
  (target  pattern_2.output)
  (deps    pattern_2.smt2)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes (or 0 1)
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff pattern_2.expected pattern_2.output)))
; Auto-generated part end
