; File auto-generated by gen-dune.ml
; Auto-generated part begin

; Test for pair.zf
(rule
  (target  pair.output)
  (deps    pair.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff pair.expected pair.output)))

; Test for length.zf
(rule
  (target  length.output)
  (deps    length.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff length.expected length.output)))

; Test for find_bigger.zf
(rule
  (target  find_bigger.output)
  (deps    find_bigger.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff find_bigger.expected find_bigger.output)))

; Test for mult_300.zf
(rule
  (target  mult_300.output)
  (deps    mult_300.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff mult_300.expected mult_300.output)))

; Test for mult_3000.zf
(rule
  (target  mult_3000.output)
  (deps    mult_3000.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff mult_3000.expected mult_3000.output)))

; Test for sets.zf
(rule
  (target  sets.output)
  (deps    sets.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff sets.expected sets.output)))

; Test for mult.zf
(rule
  (target  mult.output)
  (deps    mult.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff mult.expected mult.output)))

; Test for plist.zf
(rule
  (target  plist.output)
  (deps    plist.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff plist.expected plist.output)))

; Test for plus.zf
(rule
  (target  plus.output)
  (deps    plus.zf)
  (package dolmen_bin)
  (action (chdir %{workspace_root}
           (with-outputs-to %{target}
            (with-accepted-exit-codes 0
             (run dolmen %{deps} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (action (diff plus.expected plus.output)))
; Auto-generated part end
